@using ListAsset.DataAccess.Models

<EditForm Model="@asset" OnValidSubmit="@OnValidSubmit">
    <div class="form-group">
        <label>Asset Code :</label>
        <div>
            <InputText @bind-Value="@asset.AssetCode" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => asset.AssetCode)" />
        </div>
    </div>
    <div class="form-group">
        <label>Asset Type :</label>
        <div>
            <InputText @bind-Value="@asset.AssetType" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => asset.AssetType)" />
        </div>
    </div>
    <div class="form-group">
        <label>Asset Name :</label>
        <div>
            <InputText @bind-Value="@asset.AssetName" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => asset.AssetName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Quantity :</label>
        <div>
            <InputNumber @bind-Value="@asset.Quantity" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => asset.Quantity)" />
        </div>
    </div>

    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading) 
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            @ButtonText
        </button>
    </div>

</EditForm>

@code {
    [Parameter]
    public Asset asset { get; set; }
    [Parameter]
    public string ButtonText { get; set; } = "Save";
    [Parameter]
    public bool loading {get; set;} = false;
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
}